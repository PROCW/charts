{{- if and .Values.envoy.daemonset.enabled }}
{{ $root := . }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "envoy.fullname" $root }}
  labels:
    app: {{ template "envoy.fullname" $root }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
spec:
  selector:
    matchLabels:
       app: {{ include "envoy.fullname" $root }}
       release: {{ .Release.Name }}
  {{- with .Values.envoy.daemonset.updateStrategy }}
  updateStrategy:
{{ toYaml . | indent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        app: {{ template "envoy.fullname" $root }}
        release: {{ .Release.Name }}
      name: {{ template "envoy.fullname" $root }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.envoy.port.healthz }}"
        prometheus.io/path: "/stats/prometheus"
      {{- with .Values.envoy.podAnnotations }}
{{ toYaml . | indent 8 }}
      {{- end }}
    spec:
      {{- with .Values.envoy.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- if .Values.envoy.daemonset.hostNetwork }}
      hostNetwork: {{ .Values.envoy.daemonset.hostNetwork }}
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      containers:
      - name: envoy
        image: "{{ .Values.envoy.image.repository }}:{{ .Values.envoy.image.tag }}"
        imagePullPolicy: "{{ .Values.envoy.image.imagePullPolicy }}"
        command:
        - "envoy"
        args:
        - "-c"
        - "/config/contour.json"
        - "--service-cluster $(CONTOUR_NAMESPACE)"
        - "--service-node $(NODE_NAME)"
        - "--log-level"
        - "{{ .Values.envoy.logLevel }}"
        {{- with .Values.envoy.extraArgs }}
{{ toYaml . | indent 8 }}
        {{- end }}
        env:
        - name: CONTOUR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.envoy.port.healthz }}
          {{- if .Values.envoy.initialDelaySeconds.livenessProbe }}
          initialDelaySeconds: {{ .Values.envoy.initialDelaySeconds.livenessProbe }}
          {{- end }}
        readinessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.envoy.port.healthz }}
          {{- if .Values.envoy.initialDelaySeconds.readinessProbe }}
          initialDelaySeconds: {{ .Values.envoy.initialDelaySeconds.readinessProbe }}
          {{- end }}
          periodSeconds: 3
        volumeMounts:
        - name: contour-config
          mountPath: /config
        {{- with .Values.envoy.extraVolumeMounts }}
{{ toYaml . | indent 8 }}
        {{- end }}
        lifecycle:
          preStop:
            exec:
              command: ["wget", "-qO-", "--post-data=''", "http://localhost:9001/healthcheck/fail"]
        ports:
        - containerPort: {{ .Values.envoy.port.http }}
          name: http
        - containerPort: {{ .Values.envoy.port.https }}
          name: https
      initContainers:
      - name: {{ template "contour.fullname" . }}-initconfig
        image: "{{ .Values.contour.image.repository }}:{{ .Values.contour.image.tag }}"
        imagePullPolicy: "{{ .Values.contour.image.imagePullPolicy }}"
        command:
        - "contour"
        args:
        - "bootstrap"
        - "/config/contour.json"
        - "--xds-address={{ template "contour.fullname" . }}"
        - "--xds-port={{ .Values.contour.port.xds }}"
        volumeMounts:
        - name: contour-config
          mountPath: /config
        env:
        - name: CONTOUR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      volumes:
      - name: contour-config
        emptyDir: {}
        {{- with .Values.envoy.extraVolumes }}
{{ toYaml . | indent 8 }}
        {{- end }}
      {{- with .Values.envoy.affinity }}
      affinity:
{{ tpl (toYaml .) $root | indent 8 }}
      {{- end }}
      tolerations:
      {{- with .Values.envoy.tolerations }}
{{ tpl (toYaml .) | indent 8 }}
      {{- end }}
{{- end }}
