# Default values for php.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

contour:
  nameOverride: ""
  fullnameOverride: ""

  imagePullSecrets: []

  image:
    repository: "gcr.io/heptio-images/contour"
    tag: "v0.14.0"
    imagePullPolicy: "IfNotPresent"

  extraArgs: []

  resources: {}
  #  memory: "64Mi"
  #  cpu: "250m"
  #limits:
  #  memory: "128Mi"
  #  cpu: "500m"

  port:
    healthz: 8000
    xds: 8001

  initialDelaySeconds:
    livenessProbe: 5
    readinessProbe: 5

  podAnnotations: {}
  tolerations: {}
  affinity: {}

  deployment:
    autoscaling:
      enabled: false
      minReplicas: 2
      maxReplicas: 5
      metrics:
      - type: Resource
        resource:
          name: cpu
          targetAverageUtilization: 50

    strategy: {}
    #  type: RollingUpdate
    #  rollingUpdate:
    #    maxUnavailable: 1

    pdb:
      minAvailable: 1

    replicas: 1

  service:
    annotations: {}

  rbac:
    create: true
    serviceAccountName: default

envoy:
  nameOverride: ""
  fullnameOverride: ""

  imagePullSecrets: []

  image:
    repository: "docker.io/envoyproxy/envoy"
    tag: "v1.11.0"
    imagePullPolicy: "IfNotPresent"

  logLevel: "info"

  extraArgs: []

  port:
    http: 8080
    https: 8443
    healthz: 8002

  initialDelaySeconds:
    livenessProbe: 5
    readinessProbe: 5

  resources:
    memory: "64Mi"
    cpu: "250m"
  limits:
    memory: "128Mi"
    cpu: "500m"

  podAnnotations: {}
  tolerations: {}
  affinity: {}

  deployment:
    enabled: true

    replicas: 2

    autoscaling:
      enabled: false
      minReplicas: 2
      maxReplicas: 5
      metrics:
      - type: Resource
        resource:
          name: cpu
          targetAverageUtilization: 50

    strategy: {}
    #  type: RollingUpdate
    #  rollingUpdate:
    #    maxUnavailable: 1

    pdb:
      minAvailable: 1

  daemonset:
    enabled: false

    hostNetwork: false

    updateStrategy: {}
    # type: RollingUpdate
    # rollingUpdate:
    #  maxUnavailable: 10%

  service:
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
      #service.beta.kubernetes.io/aws-load-balancer-extra-security-groups: sg-12234
      #
    type: "LoadBalancer"

    externalTrafficPolicy: "Cluster"

    port:
      http: 8080
      https: 8443

    nodePort:
      http: "30000"
      https: "30001"
